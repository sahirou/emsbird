"""empty message

Revision ID: 631aeb2d287e
Revises: 
Create Date: 2023-08-21 00:03:43.644825

"""
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = '631aeb2d287e'
down_revision = None
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('countries',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('country', sa.String(), nullable=False),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('country')
    )
    op.create_table('levels',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('employee_level', sa.String(), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    with op.batch_alter_table('levels', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_levels_employee_level'), ['employee_level'], unique=True)

    op.create_table('status',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('employee_status', sa.String(), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    with op.batch_alter_table('status', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_status_employee_status'), ['employee_status'], unique=True)

    op.create_table('users',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('username', sa.String(length=60), nullable=True),
    sa.Column('first_name', sa.String(length=60), nullable=True),
    sa.Column('last_name', sa.String(length=60), nullable=True),
    sa.Column('password_hash', sa.String(length=128), nullable=True),
    sa.Column('is_admin', sa.Boolean(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    with op.batch_alter_table('users', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_users_first_name'), ['first_name'], unique=False)
        batch_op.create_index(batch_op.f('ix_users_last_name'), ['last_name'], unique=False)
        batch_op.create_index(batch_op.f('ix_users_username'), ['username'], unique=True)

    op.create_table('coordinations',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('coordination', sa.String(), nullable=False),
    sa.Column('country_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['country_id'], ['countries.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('coordination')
    )
    op.create_table('employees',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('matricule', sa.String(), nullable=False),
    sa.Column('name', sa.String(), nullable=False),
    sa.Column('hire_date', sa.Date(), nullable=True),
    sa.Column('departure_date', sa.Date(), nullable=True),
    sa.Column('salary', sa.Float(), nullable=True),
    sa.Column('bonus', sa.Float(), nullable=True),
    sa.Column('level_id', sa.Integer(), nullable=True),
    sa.Column('status_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['level_id'], ['levels.id'], ),
    sa.ForeignKeyConstraint(['status_id'], ['status.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    with op.batch_alter_table('employees', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_employees_matricule'), ['matricule'], unique=True)

    op.create_table('agencies',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('agency', sa.String(), nullable=False),
    sa.Column('coordination_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['coordination_id'], ['coordinations.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('agency')
    )
    op.create_table('coordinators',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('coordination_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['coordination_id'], ['coordinations.id'], ),
    sa.ForeignKeyConstraint(['id'], ['employees.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('agency_chiefs',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('agency_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['agency_id'], ['agencies.id'], ),
    sa.ForeignKeyConstraint(['id'], ['employees.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('pos',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('point_of_sale', sa.String(), nullable=False),
    sa.Column('agency_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['agency_id'], ['agencies.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('point_of_sale')
    )
    op.create_table('agents',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('pos_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['id'], ['employees.id'], ),
    sa.ForeignKeyConstraint(['pos_id'], ['pos.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('agents')
    op.drop_table('pos')
    op.drop_table('agency_chiefs')
    op.drop_table('coordinators')
    op.drop_table('agencies')
    with op.batch_alter_table('employees', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_employees_matricule'))

    op.drop_table('employees')
    op.drop_table('coordinations')
    with op.batch_alter_table('users', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_users_username'))
        batch_op.drop_index(batch_op.f('ix_users_last_name'))
        batch_op.drop_index(batch_op.f('ix_users_first_name'))

    op.drop_table('users')
    with op.batch_alter_table('status', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_status_employee_status'))

    op.drop_table('status')
    with op.batch_alter_table('levels', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_levels_employee_level'))

    op.drop_table('levels')
    op.drop_table('countries')
    # ### end Alembic commands ###
